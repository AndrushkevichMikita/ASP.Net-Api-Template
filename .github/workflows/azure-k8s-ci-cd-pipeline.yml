name: Azure Kubernetes CI/CD Pipeline

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/apitemplate-web
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG -f ApiTemplate.Presentation.Web/Dockerfile .
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest

  terraform:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform -chdir=infra/terraform init

      - name: Terraform Apply
        run: terraform -chdir=infra/terraform apply -auto-approve

  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: [build-and-push, terraform]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AZURE_AKS_CLUSTER }}
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}

      - name: Deploy to AKS
        run: |
          sed "s|IMAGE_PLACEHOLDER|$IMAGE_NAME:$IMAGE_TAG|g" infra/kubernetes/deployment.yaml | kubectl apply -f -

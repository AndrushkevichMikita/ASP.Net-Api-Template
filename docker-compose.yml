version: '3.4'

services:
  web:
    image: ${DOCKER_REGISTRY-}web
    build:
      context: .
      dockerfile: Web/Dockerfile
    ports:
        - "8080:80"
    networks:
        - elastic
    environment:
        UseDb: "4" # docker env
        ASPNETCORE_ENVIRONMENT: "Production"
        DOTNET_DockerDb: "Server=ms-sql-server,1433;Database=webapi;User=SA;Password=Passw0rd123;MultipleActiveResultSets=True;TrustServerCertificate=True;"
  ms-sql-server:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    ports:
        - "1453:1433"
    networks:
        - elastic
    environment:
        ACCEPT_EULA: "Y"
        SA_PASSWORD: Passw0rd123
        MSSQL_PID: Express
    volumes:
      - db_data:/var/opt/mssql
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
     - 9200:9200
    volumes:
     - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
     - xpack.monitoring.enabled=true
     - xpack.watcher.enabled=false
     - cluster.name=docker-cluster
     - xpack.security.enabled=false
     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
     - discovery.type=single-node
    networks:
     - elastic
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
     - 5601:5601
    depends_on:
     - elasticsearch
    environment:
     - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
     - elastic
networks:
  elastic:
    driver: bridge
volumes:
  db_data:
  elasticsearch-data:  